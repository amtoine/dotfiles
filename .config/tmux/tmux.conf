set -g prefix C-space
unbind-key C-b
bind-key C-space send-prefix

set -s escape-time 0

set-option -sa terminal-overrides ",xterm*:Tc"

bind-key r source-file ~/.config/tmux/tmux.conf

bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# from https://www.rockyourcode.com/copy-and-paste-in-tmux/
set-option -g mouse off
setw -g mode-keys vi
set-option -s set-clipboard off
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi t send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

# sessionizer
TMUX_SESSIONIZER="tmux-sessionizer.nu"
FIND_GIT_REPOS="~/documents/c/find/find-git-repos-e96486f52751828ff5f8ebdfadacbd37cdb802afa559d098bbd59cac4df8b46d"

W="100%"
H="100%"

TMUX_SESSIONIZER_KEY="a"

TMUX_SESSIONIZER_PREFIX="prefix_$TMUX_SESSIONIZER_KEY"
bind-key -T prefix $TMUX_SESSIONIZER_KEY switch-client -T $TMUX_SESSIONIZER_PREFIX

CTX="nu --env-config ~/.config/nushell/env.nu --commands 'use nu-git-manager *; $TMUX_SESSIONIZER"
TSP=$TMUX_SESSIONIZER_PREFIX
bind-key -r -T $TSP h display-popup -EE -w $W -h $H "$CTX ...(gm list --full-path) --short'"
bind-key -r -T $TSP n run-shell                     "$CTX new-session'"
bind-key -r -T $TSP s display-popup -EE -w $W -h $H "$CTX switch-session'"
bind-key -r -T $TSP r display-popup -EE -w $W -h $H "$CTX remove-sessions'"
bind-key -r -T $TSP % run-shell                     "$CTX alternate'"
bind-key -r -T $TSP e display-popup -EE -w $W -h $H "$CTX harpoon edit'"
bind-key -r -T $TSP j display-popup -EE -w $W -h $H "$CTX harpoon entries'"
bind-key -r -T $TSP a run-shell                     "$CTX harpoon add'"
bind-key -r -T $TSP 1 run-shell                     "$CTX harpoon jump 0'"
bind-key -r -T $TSP 2 run-shell                     "$CTX harpoon jump 1'"
bind-key -r -T $TSP 3 run-shell                     "$CTX harpoon jump 2'"
bind-key -r -T $TSP 4 run-shell                     "$CTX harpoon jump 3'"

# statusbar
# taken from https://hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
set -g status-position bottom
set -g status-justify left
set -g status-style 'fg=colour1'
set -g status-left ''
set -g status-right '#S '
set -g status-right-length 50
set -g status-left-length 10

setw -g window-status-current-style 'fg=colour0 bg=colour1 bold'
setw -g window-status-current-format ' #I #W #F '

setw -g window-status-style 'fg=colour1 dim'
setw -g window-status-format ' #I #[fg=colour7]#W #[fg=colour1]#F '

setw -g window-status-bell-style 'fg=colour2 bg=colour1 bold'

# messages
set -g message-style 'fg=colour2 bg=colour0 bold'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator#add-a-snippet
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
