set -g prefix C-space
unbind-key C-b
bind-key C-space send-prefix

set -s escape-time 0

set -s default-terminal "${TERM}"
set-option -sga terminal-overrides ",xterm*:Tc:RGB"

bind-key r source-file ~/.config/tmux/tmux.conf

bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# from https://www.rockyourcode.com/copy-and-paste-in-tmux/
set-option -g mouse off
setw -g mode-keys vi
set-option -s set-clipboard off
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi t send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

# sessionizer
TMUX_SESSIONIZER="tmux-sessionizer.nu"
FIND_GIT_REPOS_DIR="~/documents/bin"
FIND_GIT_REPOS_SHA="66ef417fb9dfafd41837f681e22167561b7e58862c4189bb2f70c6582d7c6dca"
FIND_GIT_REPOS_BIN="$FIND_GIT_REPOS_DIR/find-git-repos-$FIND_GIT_REPOS_SHA"

W="100%"
H="99%"

TMUX_SESSIONIZER_KEY="a"

TMUX_SESSIONIZER_PREFIX="prefix_$TMUX_SESSIONIZER_KEY"
bind-key -T prefix $TMUX_SESSIONIZER_KEY switch-client -T $TMUX_SESSIONIZER_PREFIX

CTX="nu --env-config ~/.config/nushell/env.nu --commands '$TMUX_SESSIONIZER"
TSP=$TMUX_SESSIONIZER_PREFIX
bind-key -r -T $TSP h display-popup -EE -w $W -h $H -y 0 "$CTX ...($FIND_GIT_REPOS_BIN ~/documents/repos/ | lines) --short'"
bind-key -r -T $TSP n run-shell                          "$CTX new-session'"
bind-key -r -T $TSP s display-popup -EE -w $W -h $H -y 0 "$CTX switch-session'"
bind-key -r -T $TSP r display-popup -EE -w $W -h $H -y 0 "$CTX remove-sessions'"
bind-key -r -T $TSP % run-shell                          "$CTX alternate'"
bind-key -r -T $TSP e display-popup -EE -w $W -h $H -y 0 "$CTX harpoon edit'"
bind-key -r -T $TSP j display-popup -EE -w $W -h $H -y 0 "$CTX harpoon entries'"
bind-key -r -T $TSP a run-shell                          "$CTX harpoon add'"
bind-key -r -T $TSP 1 run-shell                          "$CTX harpoon jump 0'"
bind-key -r -T $TSP 2 run-shell                          "$CTX harpoon jump 1'"
bind-key -r -T $TSP 3 run-shell                          "$CTX harpoon jump 2'"
bind-key -r -T $TSP 4 run-shell                          "$CTX harpoon jump 3'"

# from https://github.com/codingjerk/dotfiles/blob/main/config/tmux/tmux.conf
# Theme: borders
set -g pane-border-lines simple
set -g pane-border-style fg=black,bright
set -g pane-active-border-style fg=magenta

# Theme: status
set -g status-style bg=default,fg=default,bright
set -g status-left " "
set -g status-right "#[fg=magenta,bright]#S"

# Theme: status (windows)
set -g window-status-format         "#{?window_zoomed_flag,#[fg=cyan#,dim],#[fg=black#,dim]}*"
set -g window-status-current-format "#{?window_zoomed_flag,#[fg=blue#,bold],#[fg=brightwhite]}*"

# Theme: messages
set -g message-style 'fg=colour2 bg=colour0 bold'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator#add-a-snippet
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" {
    if-shell -F "#{window_zoomed_flag}" {
        send-keys C-h
        resize-pane -Z
    } {
        send-keys C-h
    }
} {
    if-shell -F "#{window_zoomed_flag}" {
        select-pane -L
        resize-pane -Z
    } {
        select-pane -L
    }
}
bind-key -n 'C-j' if-shell "$is_vim" {
    if-shell -F "#{window_zoomed_flag}" {
        send-keys C-j
        resize-pane -Z
    } {
        send-keys C-j
    }
} {
    if-shell -F "#{window_zoomed_flag}" {
        select-pane -D
        resize-pane -Z
    } {
        select-pane -D
    }
}
bind-key -n 'C-k' if-shell "$is_vim" {
    if-shell -F "#{window_zoomed_flag}" {
        send-keys C-k
        resize-pane -Z
    } {
        send-keys C-k
    }
} {
    if-shell -F "#{window_zoomed_flag}" {
        select-pane -U
        resize-pane -Z
    } {
        select-pane -U
    }
}
bind-key -n 'C-l' if-shell "$is_vim" {
    if-shell -F "#{window_zoomed_flag}" {
        send-keys C-l
        resize-pane -Z
    } {
        send-keys C-l
    }
} {
    if-shell -F "#{window_zoomed_flag}" {
        select-pane -R
        resize-pane -Z
    } {
        select-pane -R
    }
}

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
